<?xml version="1.0" standalone="no" ?>
<!DOCTYPE scalastyle>
<scalastyle>
    <name>Scalastyle test configuration</name>

    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[200]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>

    <!-- ### START OF SHARED RULES - KEEP IN SYNC WITH NON-TEST CONFIG ### -->
    <!--  This part is shared with scalastyle-config.xml - extracting them into a separate file failed because IntelliJ -->
    <!--  wrongly resolves relative !ENTITY paths (looking in the user home dir) -->

    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker"/>
    <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>
    <!-- TODO: Re-enable when issues with scaladoc comments are resolved: -->
    <!-- https://github.com/scalastyle/scalastyle/issues/267 -->
    <!-- https://github.com/scalastyle/scalastyle/issues/188 -->
    <check level="error" enabled="false" class="org.scalastyle.file.IndentationChecker">
        <parameters>
            <parameter name="tabSize">2</parameter>
            <parameter name="methodParamIndentSize">2</parameter>
            <parameter name="classParamIndentSize">2</parameter>
        </parameters>
    </check>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.ScalaDocChecker">
        <parameters>
            <parameter name="ignoreRegex">(.*Spec$)|(.*SpecIT$)</parameter>
            <parameter name="ignoreTokenTypes">PatDefOrDcl,TypeDefOrDcl,FunDefOrDcl,TmplDef</parameter>
            <parameter name="ignoreOverride">false</parameter>
            <parameter name="indentStyle">scaladoc</parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.BlockImportChecker"/>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.ImportGroupingChecker"/>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.ImportOrderChecker">
        <parameters>
            <parameter name="groups">java,scala,others</parameter>
            <parameter name="group.java">javax?\..+</parameter>
            <parameter name="group.scala">scalaz?\..+</parameter>
            <parameter name="group.others">.+</parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="false">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"/>
    <!--TODO: Raise level to error once we have proper logging-->
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[15]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="false">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z*][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="false"/>
    <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"/>
</scalastyle>